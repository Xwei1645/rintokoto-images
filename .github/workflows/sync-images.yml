name: Sync images

on:
  workflow_dispatch:

env:
  UPSTREAM_OWNER: RinLit-233-shiroko
  UPSTREAM_REPO: Rin-sHub
  UPSTREAM_PATH: updates/images
  LOCAL_DIR: images

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Fetch upstream file list
        id: fetch-upstream
        run: |
          curl -sL \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ env.UPSTREAM_OWNER }}/${{ env.UPSTREAM_REPO }}/git/trees/main?recursive=1" \
            > tree.json

          jq -r '
            .tree[] |
            select(.type == "blob") |
            select(.path | startswith("${{ env.UPSTREAM_PATH }}/")) |
            select(.path | test("\\.(png|jpe?g|gif|svg|webp|bmp|ico)$"; "i")) |
            .path
          ' tree.json | sort > upstream.list

          echo "Upstream image count: $(wc -l < upstream.list)"

      - name: Build local file list
        run: |
          mkdir -p "${{ env.LOCAL_DIR }}"
          cd "${{ env.LOCAL_DIR }}"

          find . -type f | sed 's|^\./||' | while read -r file; do
            echo "${{ env.UPSTREAM_PATH }}/$file"
          done | sort > ../local.list

          cd ..
          echo "Local image count: $(wc -l < local.list)"

      - name: Find images to download
        id: diff
        run: |
          comm -23 upstream.list local.list > download.list
          echo "Files to download: $(wc -l < download.list)"
          echo "files_to_download=$(jq -Rsc 'split("\n") | .[:-1]' download.list)" >> $GITHUB_OUTPUT

      - name: Download missing images
        if: steps.diff.outputs.files_to_download != '[]'
        shell: bash
        run: |
          jq -r '.[]' <<< '${{ steps.diff.outputs.files_to_download }}' | while IFS= read -r filename; do
            # 根据文件名反查出所有匹配的完整路径（可能多条）
            jq -r --arg fname "$filename" '
              .tree[]
              | select(.type == "blob")
              | select(.path | startswith("${{ env.UPSTREAM_PATH }}/"))
              | select(.path | split("/")[-1] == $fname)
              | .path
            ' tree.json | while IFS= read -r full_path; do
              encoded_path=$(printf '%s' "$full_path" | jq -sRr @uri)

              # 拆出子目录名
              dir_name=$(basename "$(dirname "$full_path")")
              # 拼出新文件名：原名_目录名.扩展名
              new_name="${filename%.*}_${dir_name}.${filename##*.}"

              local_file="${{ env.LOCAL_DIR }}/${new_name}"

              echo "Downloading $full_path -> $new_name"
              curl --fail -sL -o "$local_file" \
                "https://raw.githubusercontent.com/${{ env.UPSTREAM_OWNER }}/${{ env.UPSTREAM_REPO }}/main/${encoded_path}" \
                && echo "✅ OK" \
                || echo "⚠️  Failed, skipped: $new_name"
            done
          done

      - name: Commit & push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ env.LOCAL_DIR }}"
          if ! git diff --cached --quiet; then
            git commit -m "Incremental sync: Sync images at $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
            git push
          else
            echo "No new images to commit."
          fi